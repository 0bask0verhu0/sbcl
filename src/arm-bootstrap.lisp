(in-package "SB!IMPL")

(locally
    (declare (optimize (speed 3)
                       (safety 0)))
  (defun mv-test-callee ()
    (values 0 1 2 3 4 5))
  (defun mv-test-caller ()
    (multiple-value-bind (v0 v1 v2 v3 v4 v5)
        (mv-test-callee)
      (values v5 v4 v3 v2 v1 v0)))
  (defun !cold-init ()
    (let ((foo 47))
      (declare (special foo))
      #+(or)
      (progv '(p0 p1 p2)
          '(2 1 0)
        (mv-test-caller))
      (let ((saved-bsp (%primitive sb!c:current-binding-pointer)))
        (%primitive sb!c:bind 'bar nil)
        (%primitive sb!c:bind 'baz nil)
        ;(%primitive sb!c:bind 'quux (%primitive sb!c:make-unbound-marker))
        (mv-test-caller)
        (%primitive sb!c:unbind-to-here saved-bsp)))
    nil))
