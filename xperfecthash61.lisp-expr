(
(#(1EE7DBF0 45DA68C6 720BA130 831C0B63 9100CEE7 DC5C890A)
 "#(COMPILATION-SPEED DEBUG SAFETY SPACE SPEED INHIBIT-WARNINGS)"
 "(  (& (- val (>> val 14)) 7))")
(#(50EDFBF1 6C16ABD3 AC25889A E8DC3557)
 "#(EQ EQL EQUAL EQUALP)"
 "(  (& (>> val 19) 3) )")
(#(B9C768B 10F03C3F 12B1CA05 45F0CFC0 50CB4174 590BA280 5B1BC013 71D09675 85684073 9BD471AE 9D9A6442 9ED11C51 C04C0C03 C2A9CF02
   D00D4EAD EA52310C)
 "#(((:TYPE VALUES-TYPE)) ((:TYPE FUN-DESIGNATOR-TYPE) (:TYPE FUN-TYPE)) ((:TYPE NUMERIC-TYPE)) ((:TYPE UNION-TYPE) (:TYPE INTERSECTION-TYPE) (:TYPE COMPOUND-TYPE)) ((:TYPE MEMBER-TYPE)) ((:TYPE ARRAY-TYPE)) ((:TYPE UNKNOWN-TYPE) (:TYPE HAIRY-TYPE)) ((:TYPE NEGATION-TYPE)) ((:TYPE CONSTANT-TYPE)) ((:TYPE CONS-TYPE)) ((:TYPE CHARACTER-SET-TYPE)) ((:TYPE ALIEN-TYPE-TYPE)))"
 "((let ((tab #a((8) (unsigned-byte 8) 5 12 13 13 12 0 14 4)))
  (let ((b (& (>> val 20) #x7)))
   (let ((a (>> (<< val 3) 29)))
    (^ a (aref tab b))))))")
(#(B9C768B 10F03C3F 12B1CA05 2F507C88 45F0CFC0 50CB4174 590BA280 5B1BC013 71D09675 9BD471AE 9D9A6442 9ED11C51 C04C0C03 C2A9CF02
   D00D4EAD)
 "#(((:TYPE UNKNOWN-TYPE) (:TYPE HAIRY-TYPE) (:TYPE CHARACTER-SET-TYPE) (:TYPE MEMBER-TYPE) (:TYPE NUMERIC-TYPE)) ((:TYPE VALUES-TYPE) (:TYPE FUN-TYPE) (:TYPE FUN-DESIGNATOR-TYPE) (:TYPE ARGS-TYPE)) ((:TYPE CONS-TYPE)) ((:TYPE ARRAY-TYPE)) ((:TYPE UNION-TYPE) (:TYPE INTERSECTION-TYPE) (:TYPE COMPOUND-TYPE)) ((:TYPE NEGATION-TYPE)))"
 "((let ((tab #a((8) (unsigned-byte 8) 12 0 6 0 11 13 1 8)))
  (let ((b (& (>> val 1) #x7)))
   (let ((a (>> (<< val 5) 29)))
    (^ a (aref tab b))))))")
(#(3C5A72CA 42CFF1D7 50A623EF 5545367C 57ED033B 886D78E6 9ABE6FD6 A82C3140 AFB09C7B C15E0DAC DA3A52C4 DB03D182 EA7496BF)
 "#(:REQUIRED &OPTIONAL &REST &MORE &KEY &AUX &ENVIRONMENT &WHOLE &ALLOW-OTHER-KEYS &BODY :POST-ENV :POST-REST :POST-MORE)"
 "((let ((tab #a((8) (unsigned-byte 8) 0 11 8 1 0 5 0 1)))
  (let ((b (& (>> val 8) #x7)))
   (let ((a (>> (<< val 5) 29)))
    (^ a (aref tab b))))))")
(#(10ACE44E 205367CA 2341D8DB 46CC6774 47991116 5597FB3D 5CDDC111 711BEFAB 728F28C5 74748736 965CD62A A0FAB3A5 A2E1D524
   A7E15D52 B734105A C3127E24)
 "#(SB-ALIEN::ROOT INTEGER BOOLEAN ENUM FLOAT SINGLE-FLOAT DOUBLE-FLOAT SYSTEM-AREA-POINTER ALIEN-VALUE SB-ALIEN::POINTER SB-ALIEN::MEM-BLOCK ARRAY SB-ALIEN::RECORD SB-ALIEN::FUN VALUES C-STRING)"
 "((let ((tab #a((8) (unsigned-byte 8) 12 12 0 0 14 13 12 2)))
  (let ((b (& (>> val 19) #x7)))
   (let ((a (>> (<< val 5) 29)))
    (^ a (aref tab b))))))")
(#(22AFA1 1781B8EE 3367E1A7 4B24E58A 4C54776F 73DF5C31 817A567A B333E4FD B7FC0C80 B87F95C8 BBF4926A BD7DF1CF C2BD8973 C9C1A5C8
   ED992F6D)
 "#(((:TYPE ALIEN-BOOLEAN-TYPE) (:TYPE ALIEN-ENUM-TYPE) (:TYPE ALIEN-INTEGER-TYPE)) ((:TYPE ALIEN-SINGLE-FLOAT-TYPE) (:TYPE ALIEN-DOUBLE-FLOAT-TYPE) (:TYPE ALIEN-FLOAT-TYPE)) ((:TYPE ALIEN-RECORD-TYPE)) ((:TYPE ALIEN-ARRAY-TYPE)) ((:TYPE SB-ALIEN::ALIEN-C-STRING-TYPE)) ((:TYPE ALIEN-POINTER-TYPE)) ((:TYPE ALIEN-FUN-TYPE)) ((:TYPE SB-ALIEN::ALIEN-ALIEN-VALUE-TYPE) (:TYPE SB-ALIEN::ALIEN-MEM-BLOCK-TYPE) (:TYPE SB-ALIEN::ALIEN-SYSTEM-AREA-POINTER-TYPE)) ((:TYPE ALIEN-VALUES-TYPE)))"
 "((let ((tab #a((8) (unsigned-byte 8) 13 3 13 11 5 8 1 0)))
  (let ((b (& (>> val 20) #x7)))
   (let ((a (>> (<< val 5) 29)))
    (^ a (aref tab b))))))")
(#(10ACE44E 3539E037 763F1FFB 965CD62A A0FAB3A5 AC7D417F B6EC8FEB E0A39FB8 FEAFF6CF)
 "#(FIXNUM SINGLE-FLOAT DOUBLE-FLOAT INTEGER SB-VM:SIGNED-WORD WORD BIGNUM COMPLEX RATIO)"
 "((let ((tab #a((8) (unsigned-byte 8) 5 0 0 5 0 13 3 0)))
  (let ((b (& val #x7)))
   (let ((a (>> val 29)))
    (^ a (aref tab b))))))")
(#(10F03C3F 12B1CA05 2F507C88 45F0CFC0 50CB4174 590BA280 5B1BC013 85684073 9ED11C51 C2A9CF02 D00D4EAD)
 "#(((:TYPE UNION-TYPE) (:TYPE INTERSECTION-TYPE) (:TYPE COMPOUND-TYPE)) ((:TYPE NEGATION-TYPE)) ((:TYPE CONS-TYPE)) ((:TYPE ARRAY-TYPE)) ((:TYPE CONSTANT-TYPE)) ((:TYPE VALUES-TYPE) (:TYPE FUN-TYPE) (:TYPE FUN-DESIGNATOR-TYPE) (:TYPE ARGS-TYPE)))"
 "((let ((tab #a((8) (unsigned-byte 8) 0 12 9 14 3 5 3 2)))
  (let ((b (& (>> val 20) #x7)))
   (let ((a (>> (<< val 31) 29)))
    (^ a (aref tab b))))))")
(#(B9C768B BE624AE E10476C 10F03C3F 12B1CA05 2F507C88 3B031FB6 45F0CFC0 48AED6B6 50CB4174 590BA280 5B1BC013 6363C5E7 71D09675
   7D757045 85684073 8AE95BDE 9846CAB7 9BD471AE 9D9A6442 9ED11C51 C04C0C03 C2A9CF02 D00D4EAD EA52310C FBD5DA6A)
 "#(((:TYPE NUMERIC-TYPE)) ((:TYPE ARRAY-TYPE)) ((:TYPE UNION-TYPE)) ((:TYPE INTERSECTION-TYPE)) ((:TYPE MEMBER-TYPE)) ((:TYPE NAMED-TYPE)) ((:TYPE CHARACTER-SET-TYPE)) ((:TYPE CONS-TYPE)) ((:TYPE BUILT-IN-CLASSOID)) ((:TYPE FUN-DESIGNATOR-TYPE)) ((:TYPE FUN-TYPE)) ((:TYPE UNDEFINED-CLASSOID) (:TYPE CONDITION-CLASSOID) (:TYPE STRUCTURE-CLASSOID) (:TYPE STANDARD-CLASSOID) (:TYPE STATIC-CLASSOID) (:TYPE CLASSOID)) ((:TYPE CONSTANT-TYPE) (:TYPE VALUES-TYPE) (:TYPE ARGS-TYPE) (:TYPE UNKNOWN-TYPE) (:TYPE NEGATION-TYPE) (:TYPE ALIEN-TYPE-TYPE) (:TYPE HAIRY-TYPE) (:TYPE COMPOUND-TYPE) (:TYPE CTYPE)))"
 "((let ((tab #a((16) (unsigned-byte 8) 14 15 0 0 21 1 17 12 7 0 13 12 21 18 31 17)))
  (let ((b (& val #xf)))
   (let ((a (>> (<< val 7) 28)))
    (^ a (aref tab b))))))")
(#(790E4AF 73E1E633 8E8B60F0 C3EABF48 C65B82DD C97CFF28 D8C1EE02 F11FE118 FBADBE01)
 "#(:INCLUDE :INITIAL-OFFSET :PURE :TYPE :CONC-NAME :COPIER :PREDICATE :PRINT-FUNCTION :PRINT-OBJECT)"
 "((let ((tab #a((8) (unsigned-byte 8) 0 8 0 5 0 2 3 0)))
  (let ((b (& (>> val 3) #x7)))
   (let ((a (>> (<< val 31) 29)))
    (^ a (aref tab b))))))")
(#(361A9014 52F791B3 717195B9 7A38389C 8F849AB1 A8249CA2 BDE485A0)
 "#(:ABSOLUTE :LAYOUT-ID :B :BA :HA :L :RLDIC-M)"
 "(  (& (+ val (>> val 1)) 7))")
(#(19A804F1 3D6712AB 42354AFF 511F123D 52F791B3 8AFF6C0B B6C53C5B C085651F C4F3111F CB28EF79 CB2A2A51 E7BDDEAC EED915AA
   F1366560 FB4D653B)
 "#(:ASSEMBLY-ROUTINE :ASSEMBLY-ROUTINE* :CARD-TABLE-INDEX-MASK :SYMBOL-TLS-INDEX :ALIEN-CODE-LINKAGE-INDEX :ALIEN-DATA-LINKAGE-INDEX :FOREIGN :FOREIGN-DATAREF :CODE-OBJECT :LAYOUT :IMMOBILE-SYMBOL :FDEFN-CALL :STATIC-CALL :SYMBOL-VALUE :LAYOUT-ID)"
 "((let ((tab #a((8) (unsigned-byte 8) 12 0 0 0 0 14 13 8)))
  (let ((b (& (>> val 4) #x7)))
   (let ((a (>> (<< val 5) 29)))
    (^ a (aref tab b))))))")
(#(5361C23E 714D6B00 88BA357D 9094FA5E ABD78E01 B313FB62 BB01FF63 C0D75980 C572C849 D5F9BEF5 DDD5A9D4 DE352140 E3708909
   F279B4C6 F93DE6E0)
 "#(((:TYPE SB-C::CDYNAMIC-EXTENT) (:TYPE SB-C::COMBINATION) (:TYPE SB-C::ENCLOSE) (:TYPE EXIT) (:TYPE DELAY) (:TYPE SB-C::BOUND-CAST) (:TYPE SB-C::ARRAY-INDEX-CAST) (:TYPE CAST) (:TYPE SB-C::MV-COMBINATION) (:TYPE SB-C::ENTRY) (:TYPE SB-C::CIF) (:TYPE SB-C::CRETURN)) ((:TYPE SB-C::REF)) ((:TYPE SB-C::CSET)) ((:TYPE BIND)))"
 "((let ((tab #a((8) (unsigned-byte 8) 8 0 4 8 0 1 13 9)))
  (let ((b (& (>> val 8) #x7)))
   (let ((a (>> (<< val 5) 29)))
    (^ a (aref tab b))))))")
(#(7AB68FF5 B15ADCA9 CFEE5049 D3801745 F458B829)
 "#(:BINDS :CALLS :SETS :REFERENCES :MACROEXPANDS)"
 "(  (& (+ (>> val 2) (>> val 16)) 7))")
(#(3AE2E596 5361C23E 714D6B00 88BA357D 9094FA5E ABD78E01 B313FB62 BB01FF63 C572C849 D5F9BEF5 DDD5A9D4 DE352140 F279B4C6)
 "#(((:TYPE BIND) (:TYPE SB-C::REF)) ((:TYPE SB-C::CIF)) ((:TYPE SB-C::CSET)) ((:TYPE SB-C::CRETURN)) ((:TYPE EXIT)) ((:TYPE SB-C::COMBINATION) (:TYPE SB-C::MV-COMBINATION) (:TYPE SB-C::BASIC-COMBINATION)) ((:TYPE DELAY) (:TYPE SB-C::BOUND-CAST) (:TYPE SB-C::ARRAY-INDEX-CAST) (:TYPE CAST)))"
 "((let ((tab #a((8) (unsigned-byte 8) 9 0 0 8 0 8 4 7)))
  (let ((b (& (>> val 8) #x7)))
   (let ((a (>> (<< val 5) 29)))
    (^ a (aref tab b))))))")
(#(3AE2E596 5361C23E 714D6B00 88BA357D 9094FA5E ABD78E01 B313FB62 BB01FF63 C0D75980 C572C849 D5F9BEF5 DDD5A9D4 DE352140
   E3708909 F279B4C6 F93DE6E0)
 "#(((:TYPE SB-C::REF)) ((:TYPE SB-C::CIF)) ((:TYPE SB-C::COMBINATION) (:TYPE SB-C::MV-COMBINATION) (:TYPE SB-C::BASIC-COMBINATION)) ((:TYPE BIND)) ((:TYPE EXIT)) ((:TYPE SB-C::ENTRY)) ((:TYPE SB-C::CRETURN)) ((:TYPE SB-C::CSET)) ((:TYPE DELAY) (:TYPE SB-C::BOUND-CAST) (:TYPE SB-C::ARRAY-INDEX-CAST) (:TYPE CAST)) ((:TYPE SB-C::ENCLOSE)) ((:TYPE SB-C::CDYNAMIC-EXTENT)))"
 "((let ((tab #a((8) (unsigned-byte 8) 14 0 4 13 0 8 12 2)))
  (let ((b (& (>> val 8) #x7)))
   (let ((a (>> (<< val 5) 29)))
    (^ a (aref tab b))))))")
(#(5361C23E 714D6B00 88BA357D 9094FA5E ABD78E01 B313FB62 BB01FF63 D5F9BEF5 DDD5A9D4 DE352140 F279B4C6)
 "#(((:TYPE SB-C::REF)) ((:TYPE SB-C::COMBINATION)) ((:TYPE SB-C::CIF)) ((:TYPE SB-C::CRETURN)) ((:TYPE SB-C::MV-COMBINATION)) ((:TYPE EXIT)) ((:TYPE SB-C::CSET)) ((:TYPE DELAY) (:TYPE SB-C::BOUND-CAST) (:TYPE SB-C::ARRAY-INDEX-CAST) (:TYPE CAST)))"
 "((let ((tab #a((8) (unsigned-byte 8) 0 0 12 5 7 12 0 0)))
  (let ((b (& val #x7)))
   (let ((a (>> val 29)))
    (^ a (aref tab b))))))")
(#(5361C23E 714D6B00 9094FA5E ABD78E01 B313FB62 D5F9BEF5 DDD5A9D4 DE352140 F279B4C6)
 "#(((:TYPE SB-C::REF)) ((:TYPE SB-C::COMBINATION)) ((:TYPE SB-C::MV-COMBINATION)) ((:TYPE EXIT)) ((:TYPE SB-C::CSET)) ((:TYPE DELAY) (:TYPE SB-C::BOUND-CAST) (:TYPE SB-C::ARRAY-INDEX-CAST) (:TYPE CAST)))"
 "((let ((tab #a((8) (unsigned-byte 8) 0 0 13 0 7 6 0 0)))
  (let ((b (& val #x7)))
   (let ((a (>> val 29)))
    (^ a (aref tab b))))))")
(#(454D771A 6E662212 722CCC2C 998F6CF8 D9CC6462 F1D6C45D FCE1331A)
 "#(((:TYPE SB-C::CLAMBDA) (:TYPE SB-C::OPTIONAL-DISPATCH) (:TYPE SB-C::FUNCTIONAL) (:TYPE CONSTANT)) ((:TYPE SB-C::LAMBDA-VAR)) ((:TYPE SB-C::DEFINED-FUN)) ((:TYPE SB-C::GLOBAL-VAR)))"
 "(  (& (^ (>> val 2) (>> val 10)) 7))")
(#(714D6B00 9094FA5E ABD78E01 B313FB62 C572C849 DDD5A9D4 DE352140 F279B4C6)
 "#(((:TYPE BIND)) ((:TYPE SB-C::REF)) ((:TYPE DELAY) (:TYPE SB-C::BOUND-CAST) (:TYPE SB-C::ARRAY-INDEX-CAST) (:TYPE CAST)) ((:TYPE SB-C::CSET)) ((:TYPE SB-C::COMBINATION)))"
 "(  (& (+ (>> val 4) (>> val 9)) 7))")
(#(54FC85B 17D252E7 377D1CA8 519DD3CE 6E2BAD2D 7614C426 BDE3EA38 D52CECC7)
 "#(:UNKNOWN-RETURN :KNOWN-RETURN :INTERNAL-ERROR :NON-LOCAL-EXIT :BLOCK-START :CALL-SITE :SINGLE-VALUE-RETURN :NON-LOCAL-ENTRY)"
 "(  (& (^ (>> val 2) (>> val 12)) 7))")
(#(1A301372 3052A89D 473C74AB 48FBACAC 4DA6DC6C 55F6D36B 77777223 82C86917 9F4505D4 A4454CA7 A647599C B2C4B33F BD0E4352
   C35F4DD7 C8A25DB2 D99277C8 EB1E2C6C)
 "#(T SB-VM:*CURRENT-CATCH-BLOCK* SB-VM::*CURRENT-UNWIND-PROTECT-BLOCK* SB-VM::*IMMOBILE-CODEBLOB-TREE* SB-VM::*IMMOBILE-CODEBLOB-VECTOR* SB-VM::*DYNSPACE-CODEBLOB-TREE* SB-IMPL::**FINALIZER-STORE** SB-IMPL::*FINALIZER-REHASHLIST* SB-IMPL::*FINALIZERS-TRIGGERED* SB-THREAD::*STARTING-THREADS* SB-VM::*FREE-TLS-INDEX* SB-VM::+REQUIRED-FOREIGN-SYMBOLS+ *GC-EPOCH* %%DATA-VECTOR-REFFERS%% SB-VM::%%DATA-VECTOR-REFFERS/CHECK-BOUNDS%% %%DATA-VECTOR-SETTERS%% SB-VM::%%DATA-VECTOR-SETTERS/CHECK-BOUNDS%%)"
 "((let ((tab #a((16) (unsigned-byte 8) 0 0 1 0 11 0 0 12 0 0 0 12 0 13 0 22)))
  (let ((b (& val #xf)))
   (let ((a (>> (<< val 7) 28)))
    (^ a (aref tab b))))))")
(#(154A3B0 7AACD0D EE643F5 1BB39CAB 22FDA262 25C512C8 305A3B6B 33893B8A 34338FFE 36006C21 37B7B1E3 441D6918 49C8CDB2 50EDFBF1
   58FAED48 5E1281A1 5E440B44 5F91445F 630C4B59 6E2BAD2D 6EC9BAEC 7169F6EF 73A0CCDC 7F2D8268 839AF3E3 8471EF8C 8DB01467
   95785927 96254BD9 9B67B3CC A33A8187 A9F4AEDC AAAC2A1C B2B882E2 B6320B0B C0853F67 C2237D40 CB8DC35C D6AE8C5F D9F0FE17
   E5D7EC7D E5F32E85 E8DC3557 E9A6A6C4 FBDC902B FCF5C338)
 "#(SUB-GC POST-GC INTERNAL-ERROR CONTROL-STACK-EXHAUSTED-ERROR BINDING-STACK-EXHAUSTED-ERROR ALIEN-STACK-EXHAUSTED-ERROR HEAP-EXHAUSTED-ERROR UNDEFINED-ALIEN-VARIABLE-ERROR MEMORY-FAULT-ERROR UNHANDLED-TRAP-ERROR UNDEFINED-ALIEN-FUN-ERROR SB-DI::HANDLE-BREAKPOINT SB-DI::HANDLE-SINGLE-STEP-TRAP ENTER-ALIEN-CALLBACK SB-THREAD::ENTER-FOREIGN-CALLBACK TWO-ARG-<= TWO-ARG->= TWO-ARG-/= TWO-ARG-+ TWO-ARG-- TWO-ARG-* TWO-ARG-/ TWO-ARG-< TWO-ARG-> TWO-ARG-= EQL %NEGATE LENGTH ERROR FORMAT EQUALP SB-C::CHECK-DS-LIST SB-C::CHECK-DS-LIST/&REST WRITE-STRING WRITE-CHAR PRINC HAIRY-DATA-VECTOR-SET HAIRY-DATA-VECTOR-REF VECTOR-HAIRY-DATA-VECTOR-SET VECTOR-HAIRY-DATA-VECTOR-REF HAIRY-DATA-VECTOR-SET/CHECK-BOUNDS HAIRY-DATA-VECTOR-REF/CHECK-BOUNDS VECTOR-HAIRY-DATA-VECTOR-SET/CHECK-BOUNDS VECTOR-HAIRY-DATA-VECTOR-REF/CHECK-BOUNDS %LDB VECTOR-UNSIGNED-BYTE-8-P)"
 "((let ((tab #a((32) (unsigned-byte 8) 36 0 0 9 51 36 28 0 0 0 0 19 19 0 0 46 19 0 0 0 34 14 0 49 0 51 61 0 61 0 50 47)))
  (let ((b (& (>> val 1) #x1f)))
   (let ((a (>> (<< val 9) 27)))
    (^ a (aref tab b))))))")
(#(820022 12D65FF7 15802369 2F5FD56F 63E7A20E 6FC25D49 804A5D47 9B65AE2D A31AF97E B21914BD CD29540C D278DEA5 E6794721 E67AD41E
   E9E52992 EBF9DC24 EFFEC71A FEA15FC4)
 "#(:BO-DNZF :BO-DNZFP :BO-DZF :BO-DZFP :BO-F :BO-FP NIL NIL :BO-DNZT :BO-DNZTP :BO-DZT :BO-DZTP :BO-T :BO-TP NIL NIL :BO-DNZ :BO-DNZP :BO-DZ :BO-DZP :BO-U NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL NIL)"
 "((let ((tab #a((16) (unsigned-byte 8) 0 1 13 0 31 15 0 13 0 1 15 0 8 0 0 10)))
  (let ((b (& val #xf)))
   (let ((a (>> val 28)))
    (^ a (aref tab b))))))")
(#(6C16ABD3 71CA0302 B5CE1611 F4569369)
 "#(:LT :GT :EQ :SO)"
 "(  (& (- val (>> val 3)) 3) )")
(#(8E1FB37 1E45D67F 238DADEF 7AB29F90 85E8E133 D33E4C9F E163A824 F7B38584)
 "#(:CR0 :CR1 :CR2 :CR3 :CR4 :CR5 :CR6 :CR7)"
 "(  (& (^ val (>> val 11)) 7))")
(#(326AE117 80CE8459 DCF9423A FCF00468)
 "#(:GE :LE :NE :NS)"
 "(  (& val 3) )")
(#(B9C768B BE624AE 10F03C3F 12B1CA05 3B031FB6 48AED6B6 590BA280 6363C5E7 71D09675 8AE95BDE 9846CAB7 9BD471AE 9D9A6442 C04C0C03
   C2A9CF02 FBD5DA6A)
 "#(((:TYPE MEMBER-TYPE)) ((:TYPE UNDEFINED-CLASSOID) (:TYPE BUILT-IN-CLASSOID) (:TYPE CONDITION-CLASSOID) (:TYPE STRUCTURE-CLASSOID) (:TYPE STANDARD-CLASSOID) (:TYPE STATIC-CLASSOID) (:TYPE CLASSOID)) ((:TYPE CHARACTER-SET-TYPE) (:TYPE ARRAY-TYPE) (:TYPE NUMERIC-TYPE) (:TYPE CONS-TYPE)) ((:TYPE INTERSECTION-TYPE)) ((:TYPE UNION-TYPE)) ((:TYPE UNKNOWN-TYPE) (:TYPE HAIRY-TYPE)))"
 "((let ((tab #a((8) (unsigned-byte 8) 0 5 15 12 12 5 3 15)))
  (let ((b (& (>> val 15) #x7)))
   (let ((a (>> (<< val 3) 29)))
    (^ a (aref tab b))))))")
(#(B9C768B BE624AE 10F03C3F 12B1CA05 2F507C88 3B031FB6 45F0CFC0 48AED6B6 50CB4174 590BA280 5B1BC013 6363C5E7 71D09675 8AE95BDE
   9846CAB7 9BD471AE 9D9A6442 C04C0C03 C2A9CF02 D00D4EAD FBD5DA6A)
 "#(((:TYPE UNKNOWN-TYPE) (:TYPE HAIRY-TYPE)) ((:TYPE NEGATION-TYPE)) ((:TYPE UNION-TYPE)) ((:TYPE INTERSECTION-TYPE)) ((:TYPE MEMBER-TYPE)) ((:TYPE VALUES-TYPE) (:TYPE FUN-TYPE) (:TYPE FUN-DESIGNATOR-TYPE) (:TYPE ARGS-TYPE)) ((:TYPE NUMERIC-TYPE)) ((:TYPE UNDEFINED-CLASSOID) (:TYPE BUILT-IN-CLASSOID) (:TYPE CONDITION-CLASSOID) (:TYPE STRUCTURE-CLASSOID) (:TYPE STANDARD-CLASSOID) (:TYPE STATIC-CLASSOID) (:TYPE CLASSOID)) ((:TYPE ARRAY-TYPE)) ((:TYPE CONS-TYPE)) ((:TYPE CHARACTER-SET-TYPE)))"
 "((let ((tab #a((16) (unsigned-byte 8) 0 0 7 15 3 0 16 11 13 0 3 16 0 31 0 16)))
  (let ((b (& val #xf)))
   (let ((a (>> val 28)))
    (^ a (aref tab b))))))")
(#(1AE86B1B 874B4BCB BBCCDE6E C9C163C0 FC2116FC)
 "#(((:TYPE SB-PRETTY::NEWLINE)) ((:TYPE SB-PRETTY::INDENTATION)) ((:TYPE SB-PRETTY::BLOCK-START)) ((:TYPE SB-PRETTY::BLOCK-END)) ((:TYPE SB-PRETTY::TAB)))"
 "(  (& (- val (>> val 21)) 7))")
)
;; EOF
